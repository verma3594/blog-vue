{"ast":null,"code":"import _asyncToGenerator from \"/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport axios from \"axios\";\nvar state = {\n  products: [],\n  users: []\n};\nvar getters = {\n  allProducts: function allProducts(state) {\n    return state.products;\n  },\n  allUsers: function allUsers(state) {\n    return state.user;\n  }\n};\nvar actions = {\n  getProducts: function getProducts(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"http://localhost:3000/products\");\n\n            case 3:\n              response = _context.sent;\n              commit(\"setProducts\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  addProducts: function addProducts(_ref2, product) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.post(\"http://localhost:3000/products\", product);\n\n            case 3:\n              response = _context2.sent;\n              commit(\"newProduct\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  signUp: function signUp(_ref3) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios.post(\"http://localhost:3000/users\");\n\n            case 3:\n              response = _context3.sent;\n              commit(\"newSigup\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};\nvar mutations = {\n  setProducts: function setProducts(state, products) {\n    return state.products = products;\n  },\n  newProduct: function newProduct(state, product) {\n    return state.products.unshift(product);\n  },\n  newSigup: function newSigup(state, users) {\n    return state.users = users;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/src/store/modules/products/index.js"],"names":["axios","state","products","users","getters","allProducts","allUsers","user","actions","getProducts","commit","get","response","data","addProducts","product","post","signUp","mutations","setProducts","newProduct","unshift","newSigup"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,EADE;AAEZC,EAAAA,KAAK,EAAC;AAFM,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,qBAACJ,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAjB;AAAA,GADC;AAEdI,EAAAA,QAAQ,EAAE,kBAACL,KAAD;AAAA,WAAUA,KAAK,CAACM,IAAhB;AAAA;AAFI,CAAhB;AAKA,IAAMC,OAAO,GAAG;AACRC,EAAAA,WADQ,6BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACLV,KAAK,CAACW,GAAN,CAAU,gCAAV,CADK;;AAAA;AACtBC,cAAAA,QADsB;AAE5BF,cAAAA,MAAM,CAAC,aAAD,EAAgBE,QAAQ,CAACC,IAAzB,CAAN;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7B,GAJa;AAKRC,EAAAA,WALQ,8BAKcC,OALd,EAKsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBL,cAAAA,MAAiB,SAAjBA,MAAiB;AAAA;AAAA,qBACXV,KAAK,CAACgB,IAAN,CAAW,gCAAX,EAA6CD,OAA7C,CADW;;AAAA;AAC5BH,cAAAA,QAD4B;AAElCF,cAAAA,MAAM,CAAC,YAAD,EAAeE,QAAQ,CAACC,IAAxB,CAAN;;AAFkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGnC,GARa;AASRI,EAAAA,MATQ,yBASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARP,cAAAA,MAAQ,SAARA,MAAQ;AAAA;AAAA,qBACGV,KAAK,CAACgB,IAAN,CAAW,6BAAX,CADH;;AAAA;AACdJ,cAAAA,QADc;AAEpBF,cAAAA,MAAM,CAAC,UAAD,EAAaE,QAAQ,CAACC,IAAtB,CAAN;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGrB;AAZa,CAAhB;AAeA,IAAMK,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,qBAAClB,KAAD,EAAQC,QAAR;AAAA,WAAsBD,KAAK,CAACC,QAAN,GAAiBA,QAAvC;AAAA,GADG;AAEhBkB,EAAAA,UAAU,EAAE,oBAACnB,KAAD,EAASc,OAAT;AAAA,WAAsBd,KAAK,CAACC,QAAN,CAAemB,OAAf,CAAuBN,OAAvB,CAAtB;AAAA,GAFI;AAGhBO,EAAAA,QAAQ,EAAE,kBAACrB,KAAD,EAAQE,KAAR;AAAA,WAAmBF,KAAK,CAACE,KAAN,GAAaA,KAAhC;AAAA;AAHM,CAAlB;AAMA,eAAe;AACbF,EAAAA,KAAK,EAALA,KADa;AAEbG,EAAAA,OAAO,EAAPA,OAFa;AAGbI,EAAAA,OAAO,EAAPA,OAHa;AAIbU,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst state = {\n  products: [],\n  users:[],\n};\nconst getters = {\n  allProducts: (state) => state.products,\n  allUsers: (state)=> state.user\n\n};\nconst actions = {\n  async getProducts({ commit }) {\n    const response = await axios.get(\"http://localhost:3000/products\");\n    commit(\"setProducts\", response.data);\n  },\n  async addProducts({commit}, product){\n    const response = await axios.post(\"http://localhost:3000/products\", product);\n    commit(\"newProduct\", response.data)\n  },\n  async signUp({commit}){\n    const response = await axios.post(\"http://localhost:3000/users\");\n    commit(\"newSigup\", response.data)\n  }\n};\n\nconst mutations = {\n  setProducts: (state, products) => (state.products = products),\n  newProduct: (state,  product) => (state.products.unshift(product)),\n  newSigup: (state, users) => (state.users= users)\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}