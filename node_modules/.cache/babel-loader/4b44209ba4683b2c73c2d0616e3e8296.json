{"ast":null,"code":"import _asyncToGenerator from \"/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport axios from \"axios\";\nvar state = {\n  users: []\n};\nvar getters = {\n  allUsers: function allUsers(state) {\n    return state.products;\n  }\n};\nvar actions = {\n  allUsers: function allUsers(_ref, user) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.post(\"http://localhost:3000/users\", user);\n\n            case 3:\n              response = _context.sent;\n              commit(\"newUser\", response.data);\n\n              if (response.status == 201) {\n                localStorage.setItem(\"user-info\", JSON.stringify(response.data));\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //   async allLogin() {\n  //     let result = await axios.get(\n  //       `http://localhost:3000/users?Email=${this.Email}&Password=${this.Password}`\n  //     );\n  //     console.log(result);\n  //     if (result.status == 200 && result.data.length > 0) {\n  //       localStorage.setItem(\"user-info\", JSON.stringify(result.data[0]));\n  //       this.$router.push(\"/Dashboard\");\n  //     } else {\n  //       this.message = true;\n  //     }\n  //   },\n  allLogin: function allLogin(_ref2) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.get(\"http://localhost:3000/users?Email=\".concat(_this.Email, \"&Password=\").concat(_this.Password));\n\n            case 3:\n              result = _context2.sent;\n              commit(\"newLogin\", result.data);\n              console.log(\"result\");\n\n              if (result.status == 200 && result.data.length > 0) {\n                localStorage.setItem(\"user-info\", JSON.stringify(result.data[0]));\n\n                _this.$router.push(\"/Dashboard\");\n              } else {\n                _this.message = true;\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nvar mutations = {\n  newUser: function newUser(state, user) {\n    return state.users.unshift(user);\n  } // newLogin: (state,  user) => (state.users.unshift(user)),\n\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/src/store/modules/login/index.js"],"names":["axios","state","users","getters","allUsers","products","actions","user","commit","post","response","data","status","localStorage","setItem","JSON","stringify","allLogin","get","Email","Password","result","console","log","length","$router","push","message","mutations","newUser","unshift"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AADK,CAAd;AAGA,IAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,kBAACH,KAAD;AAAA,WAAWA,KAAK,CAACI,QAAjB;AAAA;AADI,CAAhB;AAGA,IAAMC,OAAO,GAAG;AACRF,EAAAA,QADQ,0BACWG,IADX,EACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAdC,cAAAA,MAAc,QAAdA,MAAc;AAAA;AAAA,qBACLR,KAAK,CAACS,IAAN,CAAW,6BAAX,EAA0CF,IAA1C,CADK;;AAAA;AACtBG,cAAAA,QADsB;AAE5BF,cAAAA,MAAM,CAAC,SAAD,EAAYE,QAAQ,CAACC,IAArB,CAAN;;AACA,kBAAID,QAAQ,CAACE,MAAT,IAAmB,GAAvB,EAA4B;AACxBC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAAlC;AACD;;AALyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM7B,GAPa;AAQhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAESM,EAAAA,QArBO,2BAqBW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAART,cAAAA,MAAQ,SAARA,MAAQ;AAAA;AAAA,qBACDR,KAAK,CAACkB,GAAN,6CAA+C,KAAI,CAACC,KAApD,uBAAsE,KAAI,CAACC,QAA3E,EADC;;AAAA;AACfC,cAAAA,MADe;AAErBb,cAAAA,MAAM,CAAC,UAAD,EAAaa,MAAM,CAACV,IAApB,CAAN;AACAW,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,kBAAIF,MAAM,CAACT,MAAP,IAAiB,GAAjB,IAAwBS,MAAM,CAACV,IAAP,CAAYa,MAAZ,GAAqB,CAAjD,EAAoD;AAClDX,gBAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeK,MAAM,CAACV,IAAP,CAAY,CAAZ,CAAf,CAAlC;;AACA,gBAAA,KAAI,CAACc,OAAL,CAAaC,IAAb,CAAkB,YAAlB;AACD,eAHD,MAGO;AACL,gBAAA,KAAI,CAACC,OAAL,GAAe,IAAf;AACD;;AAToB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUxB;AA/Ba,CAAhB;AAkCA,IAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,iBAAC5B,KAAD,EAASM,IAAT;AAAA,WAAmBN,KAAK,CAACC,KAAN,CAAY4B,OAAZ,CAAoBvB,IAApB,CAAnB;AAAA,GADK,CAEd;;AAFc,CAAlB;AAMA,eAAe;AACbN,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,OAAO,EAAPA,OAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbsB,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst state = {\n  users: [],\n};\nconst getters = {\n  allUsers: (state) => state.products,\n};\nconst actions = {\n  async allUsers({commit}, user){\n    const response = await axios.post(\"http://localhost:3000/users\", user);\n    commit(\"newUser\", response.data)\n    if (response.status == 201) {\n        localStorage.setItem(\"user-info\", JSON.stringify(response.data));\n      }\n  },\n//   async allLogin() {\n//     let result = await axios.get(\n//       `http://localhost:3000/users?Email=${this.Email}&Password=${this.Password}`\n//     );\n//     console.log(result);\n//     if (result.status == 200 && result.data.length > 0) {\n//       localStorage.setItem(\"user-info\", JSON.stringify(result.data[0]));\n//       this.$router.push(\"/Dashboard\");\n//     } else {\n//       this.message = true;\n//     }\n//   },\n\n  async  allLogin({commit}){\n      const result= await axios.get(`http://localhost:3000/users?Email=${this.Email}&Password=${this.Password}`);\n      commit(\"newLogin\", result.data)\n      console.log(\"result\");\n      if (result.status == 200 && result.data.length > 0) {\n        localStorage.setItem(\"user-info\", JSON.stringify(result.data[0]));\n        this.$router.push(\"/Dashboard\");\n      } else {\n        this.message = true;\n      }\n  }\n};\n\nconst mutations = {\n    newUser: (state,  user) => (state.users.unshift(user)),\n    // newLogin: (state,  user) => (state.users.unshift(user)),\n   \n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}