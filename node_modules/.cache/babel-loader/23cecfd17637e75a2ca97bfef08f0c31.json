{"ast":null,"code":"import _asyncToGenerator from \"/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport axios from \"axios\";\nvar state = {\n  products: []\n};\nvar getters = {\n  allProducts: function allProducts(state) {\n    return state.products;\n  }\n};\nvar actions = {\n  addProducts: function addProducts(_ref, product) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.post(\"http://localhost:3000/users\", product);\n\n            case 3:\n              response = _context.sent;\n              commit(\"newProduct\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nvar mutations = {\n  setProducts: function setProducts(state, products) {\n    return state.products = products;\n  },\n  newProduct: function newProduct(state, product) {\n    return state.products.unshift(product);\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/src/store/modules/login/index.js"],"names":["axios","state","products","getters","allProducts","actions","addProducts","product","commit","post","response","data","mutations","setProducts","newProduct","unshift"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE;AADE,CAAd;AAGA,IAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,qBAACH,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAjB;AAAA;AADC,CAAhB;AAGA,IAAMG,OAAO,GAAG;AACRC,EAAAA,WADQ,6BACcC,OADd,EACsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBC,cAAAA,MAAiB,QAAjBA,MAAiB;AAAA;AAAA,qBACXR,KAAK,CAACS,IAAN,CAAW,6BAAX,EAA0CF,OAA1C,CADW;;AAAA;AAC5BG,cAAAA,QAD4B;AAElCF,cAAAA,MAAM,CAAC,YAAD,EAAeE,QAAQ,CAACC,IAAxB,CAAN;;AAFkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGnC;AAJa,CAAhB;AAOA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,qBAACZ,KAAD,EAAQC,QAAR;AAAA,WAAsBD,KAAK,CAACC,QAAN,GAAiBA,QAAvC;AAAA,GADG;AAEhBY,EAAAA,UAAU,EAAE,oBAACb,KAAD,EAASM,OAAT;AAAA,WAAsBN,KAAK,CAACC,QAAN,CAAea,OAAf,CAAuBR,OAAvB,CAAtB;AAAA;AAFI,CAAlB;AAKA,eAAe;AACbN,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,OAAO,EAAPA,OAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbO,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst state = {\n  products: [],\n};\nconst getters = {\n  allProducts: (state) => state.products,\n};\nconst actions = {\n  async addProducts({commit}, product){\n    const response = await axios.post(\"http://localhost:3000/users\", product);\n    commit(\"newProduct\", response.data)\n  }\n};\n\nconst mutations = {\n  setProducts: (state, products) => (state.products = products),\n  newProduct: (state,  product) => (state.products.unshift(product)),\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}