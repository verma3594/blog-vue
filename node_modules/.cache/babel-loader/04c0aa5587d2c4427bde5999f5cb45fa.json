{"ast":null,"code":"import _asyncToGenerator from \"/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport axios from \"axios\";\nvar state = {\n  products: [],\n  addProducts: []\n};\nvar getters = {\n  allProducts: function allProducts(state) {\n    return state.products;\n  },\n  addAllProducts: function addAllProducts(state) {\n    return state.addProduct;\n  }\n};\nvar actions = {\n  getProducts: function getProducts(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"http://localhost:3000/products\");\n\n            case 3:\n              response = _context.sent;\n              commit(\"setProducts\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  addProducts: function addProducts(_ref2, product) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.post(\"http://localhost:3000/products\", product);\n\n            case 3:\n              response = _context2.sent;\n              commit(\"newProduct\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nvar mutations = {\n  setProducts: function setProducts(state, products) {\n    return state.products = products;\n  },\n  newProduct: function newProduct(state, product) {\n    return state.products.unshift(product);\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/src/store/modules/products/index.js"],"names":["axios","state","products","addProducts","getters","allProducts","addAllProducts","addProduct","actions","getProducts","commit","get","response","data","product","post","mutations","setProducts","newProduct","unshift"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,EADE;AAEZC,EAAAA,WAAW,EAAC;AAFA,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,qBAACJ,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAjB;AAAA,GADC;AAEdI,EAAAA,cAAc,EAAE,wBAACL,KAAD;AAAA,WAAWA,KAAK,CAACM,UAAjB;AAAA;AAFF,CAAhB;AAIA,IAAMC,OAAO,GAAG;AACRC,EAAAA,WADQ,6BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACLV,KAAK,CAACW,GAAN,CAAU,gCAAV,CADK;;AAAA;AACtBC,cAAAA,QADsB;AAE5BF,cAAAA,MAAM,CAAC,aAAD,EAAgBE,QAAQ,CAACC,IAAzB,CAAN;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7B,GAJa;AAORV,EAAAA,WAPQ,8BAOgBW,OAPhB,EAOyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnBJ,cAAAA,MAAmB,SAAnBA,MAAmB;AAAA;AAAA,qBACdV,KAAK,CAACe,IAAN,CACrB,gCADqB,EAErBD,OAFqB,CADc;;AAAA;AAC/BF,cAAAA,QAD+B;AAKrCF,cAAAA,MAAM,CAAC,YAAD,EAAeE,QAAQ,CAACC,IAAxB,CAAN;;AALqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMtC;AAba,CAAhB;AAgBA,IAAMG,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,qBAAChB,KAAD,EAAQC,QAAR;AAAA,WAAsBD,KAAK,CAACC,QAAN,GAAiBA,QAAvC;AAAA,GADG;AAGhBgB,EAAAA,UAAU,EAAE,oBAACjB,KAAD,EAAQa,OAAR;AAAA,WAAoBb,KAAK,CAACC,QAAN,CAAeiB,OAAf,CAAuBL,OAAvB,CAApB;AAAA;AAHI,CAAlB;AAMA,eAAe;AACbb,EAAAA,KAAK,EAALA,KADa;AAEbG,EAAAA,OAAO,EAAPA,OAFa;AAGbI,EAAAA,OAAO,EAAPA,OAHa;AAIbQ,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst state = {\n  products: [],\n  addProducts:[]\n};\nconst getters = {\n  allProducts: (state) => state.products,\n  addAllProducts: (state) => state.addProduct,\n};\nconst actions = {\n  async getProducts({ commit }) {\n    const response = await axios.get(\"http://localhost:3000/products\");\n    commit(\"setProducts\", response.data);\n  },\n\n\n  async addProducts({ commit }, product) {\n    const response = await axios.post(\n      \"http://localhost:3000/products\",\n      product\n    );\n    commit(\"newProduct\", response.data);\n  },\n};\n\nconst mutations = {\n  setProducts: (state, products) => (state.products = products),\n\n  newProduct: (state, product) => state.products.unshift(product),\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}