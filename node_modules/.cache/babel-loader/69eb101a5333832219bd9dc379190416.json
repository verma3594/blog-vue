{"ast":null,"code":"import _asyncToGenerator from \"/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport axios from \"axios\";\nvar state = {\n  posts: []\n};\nvar getters = {\n  allposts: function allposts(state) {\n    return state.posts;\n  }\n};\nvar actions = {\n  getposts: function getposts(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"http://localhost:3000/posts\");\n\n            case 3:\n              response = _context.sent;\n              commit(\"setposts\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  addposts: function addposts(_ref2, product) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.post(\"http://localhost:3000/posts\", product);\n\n            case 3:\n              response = _context2.sent;\n              commit(\"newProduct\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nvar mutations = {\n  setposts: function setposts(state, posts) {\n    return state.posts = posts;\n  },\n  newProduct: function newProduct(state, product) {\n    return state.posts.unshift(product);\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/src/store/modules/posts/index.js"],"names":["axios","state","posts","getters","allposts","actions","getposts","commit","get","response","data","addposts","product","post","mutations","setposts","newProduct","unshift"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AADK,CAAd;AAGA,IAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,kBAACH,KAAD;AAAA,WAAWA,KAAK,CAACC,KAAjB;AAAA;AADI,CAAhB;AAGA,IAAMG,OAAO,GAAG;AACRC,EAAAA,QADQ,0BACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACFP,KAAK,CAACQ,GAAN,CAAU,6BAAV,CADE;;AAAA;AACnBC,cAAAA,QADmB;AAEzBF,cAAAA,MAAM,CAAC,UAAD,EAAaE,QAAQ,CAACC,IAAtB,CAAN;;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG1B,GAJa;AAKRC,EAAAA,QALQ,2BAKaC,OALb,EAKsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnBL,cAAAA,MAAmB,SAAnBA,MAAmB;AAAA;AAAA,qBACXP,KAAK,CAACa,IAAN,CACrB,6BADqB,EAErBD,OAFqB,CADW;;AAAA;AAC5BH,cAAAA,QAD4B;AAKlCF,cAAAA,MAAM,CAAC,YAAD,EAAeE,QAAQ,CAACC,IAAxB,CAAN;;AALkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMnC;AAXa,CAAhB;AAcA,IAAMI,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,kBAACd,KAAD,EAAQC,KAAR;AAAA,WAAmBD,KAAK,CAACC,KAAN,GAAcA,KAAjC;AAAA,GADM;AAEhBc,EAAAA,UAAU,EAAE,oBAACf,KAAD,EAAQW,OAAR;AAAA,WAAoBX,KAAK,CAACC,KAAN,CAAYe,OAAZ,CAAoBL,OAApB,CAApB;AAAA;AAFI,CAAlB;AAKA,eAAe;AACbX,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,OAAO,EAAPA,OAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbS,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst state = {\n  posts: [],\n};\nconst getters = {\n  allposts: (state) => state.posts,\n};\nconst actions = {\n  async getposts({ commit }) {\n    const response = await axios.get(\"http://localhost:3000/posts\");\n    commit(\"setposts\", response.data);\n  },\n  async addposts({ commit }, product) {\n    const response = await axios.post(\n      \"http://localhost:3000/posts\",\n      product\n    );\n    commit(\"newProduct\", response.data);\n  },\n};\n\nconst mutations = {\n  setposts: (state, posts) => (state.posts = posts),\n  newProduct: (state, product) => state.posts.unshift(product),\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}