{"ast":null,"code":"import _asyncToGenerator from \"/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport axios from \"axios\";\nvar state = {\n  products: []\n};\nvar getters = {\n  allProducts: function allProducts(state) {\n    return state.products;\n  }\n};\nvar actions = {\n  getProducts: function getProducts(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"http://localhost:3000/products\");\n\n            case 3:\n              response = _context.sent;\n              commit(\"setProducts\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  addProducts: function addProducts(_ref2, product) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.post(\"http://localhost:3000/users/products\", product);\n\n            case 3:\n              response = _context2.sent;\n              commit(\"newProduct\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nvar mutations = {\n  setProducts: function setProducts(state, products) {\n    return state.products = products;\n  },\n  newProduct: function newProduct(state, product) {\n    return state.products.unshift(product);\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/vishalverma/Vishal/My Data/Project/Vue-basics/untitled folder/blog-vue/src/store/modules/products/index.js"],"names":["axios","state","products","getters","allProducts","actions","getProducts","commit","get","response","data","addProducts","product","post","mutations","setProducts","newProduct","unshift"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE;AADE,CAAd;AAGA,IAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,qBAACH,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAjB;AAAA;AADC,CAAhB;AAIA,IAAMG,OAAO,GAAG;AACRC,EAAAA,WADQ,6BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACLP,KAAK,CAACQ,GAAN,CAAU,gCAAV,CADK;;AAAA;AACtBC,cAAAA,QADsB;AAE5BF,cAAAA,MAAM,CAAC,aAAD,EAAgBE,QAAQ,CAACC,IAAzB,CAAN;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7B,GAJa;AAKRC,EAAAA,WALQ,8BAKgBC,OALhB,EAKyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnBL,cAAAA,MAAmB,SAAnBA,MAAmB;AAAA;AAAA,qBACdP,KAAK,CAACa,IAAN,CACrB,sCADqB,EAErBD,OAFqB,CADc;;AAAA;AAC/BH,cAAAA,QAD+B;AAKrCF,cAAAA,MAAM,CAAC,YAAD,EAAeE,QAAQ,CAACC,IAAxB,CAAN;;AALqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMtC;AAXa,CAAhB;AAcA,IAAMI,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,qBAACd,KAAD,EAAQC,QAAR;AAAA,WAAsBD,KAAK,CAACC,QAAN,GAAiBA,QAAvC;AAAA,GADG;AAEhBc,EAAAA,UAAU,EAAE,oBAACf,KAAD,EAAQW,OAAR;AAAA,WAAoBX,KAAK,CAACC,QAAN,CAAee,OAAf,CAAuBL,OAAvB,CAApB;AAAA;AAFI,CAAlB;AAKA,eAAe;AACbX,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,OAAO,EAAPA,OAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbS,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst state = {\n  products: [],\n};\nconst getters = {\n  allProducts: (state) => state.products,\n};\n\nconst actions = {\n  async getProducts({ commit }) {\n    const response = await axios.get(\"http://localhost:3000/products\");\n    commit(\"setProducts\", response.data);\n  },\n  async addProducts({ commit }, product) {\n    const response = await axios.post(\n      \"http://localhost:3000/users/products\",\n      product\n    );\n    commit(\"newProduct\", response.data);\n  },\n};\n\nconst mutations = {\n  setProducts: (state, products) => (state.products = products),\n  newProduct: (state, product) => state.products.unshift(product),\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}